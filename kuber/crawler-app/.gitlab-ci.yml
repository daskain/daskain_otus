variables:
  KUBE_CONFIG: ${echo /etc/gitlab/config}
  PROJECT_NAME: "${CI_PROJECT_NAME}-preprod"

stages:
  - build
  - coverage
  - health
  - deploy
  - prod
  - preprod
  - check


build:
  stage: build
  image: alpine/helm:3.2.1
  script:
    - PROJECT_NAME="${CI_PROJECT_NAME}-preprod"
    - helm upgrade ${PROJECT_NAME} -i ./ -f values.preprod.env.yaml

  
test_kctl:
  stage: coverage
  image: alpine:3.7
  script:
    - apk update  && apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
    - mkdir -p $HOME/.kube
    - echo -n ${KUBE_CONFIG} > $HOME/.kube/config
    - kubectl get pods
    - IP=$(kubectl get ingress -o jsonpath={.items[0].status.loadBalancer.ingress[].ip})
    - echo "IP=$IP" >> init.env
  artifacts:
    reports:
      dotenv: init.env
  

sanity ui:
  dependencies:
    - test_kctl
  variables:
    URL_UI: $IP/$PROJECT_NAME/ui
  image: curlimages/curl
  stage: check
  script:
    - >
      curl -i ${URL_UI}/ | grep "HTTP/1.1 200 OK" && 
      ( echo Helth Check OK = $URL_UI && exit 0; ) || ( echo Helth Check Failed Actuator=$URL_UI && exit 2; ) 

sanity crawler:
  dependencies:
    - test_kctl
  variables:
    URL_CRAWLER: $IP/$PROJECT_NAME/crawler
  image: curlimages/curl
  stage: check
  script:
    - >
      curl -i ${URL_CRAWLER} | grep "HTTP/1.1 200 OK" && 
      ( echo Helth Check OK = $URL_CRAWLER && exit 0; ) || ( echo Helth Check Failed Actuator=$URL_CRAWLER && exit 2; ) 
